{
	"name": "Notebook 1",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "Spark1",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1"
			},
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/1ad3fe8b-dff8-4d1f-a7bc-b2937e803562/resourceGroups/HCL/providers/Microsoft.Synapse/workspaces/hclsynapse2021/bigDataPools/Spark1",
				"name": "Spark1",
				"type": "Spark",
				"endpoint": "https://hclsynapse2021.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/Spark1",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "2.4",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"from pyspark.sql import SparkSession\r\n",
					"import pyspark.sql.functions as f\r\n",
					"\r\n",
					"# Azure storage access info\r\n",
					"blob_account_name = 'hclsynapse2021' # replace with your blob name\r\n",
					"blob_container_name = 'hcl-hands-on' # replace with your container name\r\n",
					"blob_relative_path = 'RetailSales/RetailSales.csv' # replace with your relative folder path\r\n",
					"linked_service_name = 'hclsynapse2021' # replace with your linked service name\r\n",
					"\r\n",
					"blob_sas_token = mssparkutils.credentials.getConnectionStringOrCreds(linked_service_name)\r\n",
					"\r\n",
					"# Allow SPARK to access from Blob remotely\r\n",
					"\r\n",
					"wasbs_path = 'wasbs://%s@%s.blob.core.windows.net/%s' % (blob_container_name, blob_account_name, blob_relative_path)\r\n",
					"\r\n",
					"spark.conf.set('fs.azure.sas.%s.%s.blob.core.windows.net' % (blob_container_name, blob_account_name), blob_sas_token)\r\n",
					"#print('Remote blob path: ' + wasbs_path)\r\n",
					"\r\n",
					"df = spark.read.option(\"header\", \"true\") \\\r\n",
					"            .option(\"delimiter\",\",\") \\\r\n",
					"            .schema(\"storeId INT, productCode STRING, quantity INT, logQuantity DOUBLE, advertising\tINT,price FLOAT,weekStarting STRING, id STRING\")\\\r\n",
					"            .csv(wasbs_path)\r\n",
					"\r\n",
					"\r\n",
					"df.withColumn(\"weekStarting\", f.to_timestamp(\"weekStarting\"))"
				],
				"execution_count": 2
			}
		]
	}
}